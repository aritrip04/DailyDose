
class Solution {
    public int findPairs(int[] nums, int k) {
        if (k < 0) {
            return 0;  
        }
        Set<Integer> uniqueNums = new HashSet<>();
        Set<String> validPairs = new HashSet<>();
        for (int num : nums) {
            if (uniqueNums.contains(num - k)) {
                validPairs.add((num - k) + "," + num); 
            }
            if (uniqueNums.contains(num + k)) {
                validPairs.add(num + "," + (num + k)); 
            }
            uniqueNums.add(num); 
        }
        return validPairs.size();
    }
    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] nums1 = {3, 1, 4, 1, 5};
        int k1 = 2;
        System.out.println(solution.findPairs(nums1, k1));  
        int[] nums2 = {1, 2, 3, 4, 5};
        int k2 = 1;
        System.out.println(solution.findPairs(nums2, k2));  
        int[] nums3 = {1, 3, 1, 5, 4};
        int k3 = 0;
        System.out.println(solution.findPairs(nums3, k3));  
    }
}
